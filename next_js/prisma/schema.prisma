// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("SUPABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  state          String    @default("user")
  image          String?
  intro          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  sessions       Session[]
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Memo {
  id        String     @id @default(uuid())
  title     String?
  items     MemoItem[] // MemoItemとのリレーション
  userId    String
  favorite  Boolean    @default(false)
  visited   Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model MemoItem {
  id      Int      @id @default(autoincrement())
  type    String   // "text" または "img"
  content String   // テキストまたは画像URL
  order   Int      // 表示順
  memoId  String      // 親メモへの参照
  memo    Memo     @relation(fields: [memoId], references: [id])
}



// model ApiCount {
//   id Int @default(autoincrement()) @id
//   weather Int @default(0)
//   googleMap Int @default(0)
//   twitter Int @default(0)
//   gemini Int @default(0)
// }


// model Plan {
//   id Int @default(autoincrement()) @id
//   userId Int
//   title String
//   days Int
//   fromWhen Int
//   toTrabelId Int[]
//   createAt DateTime @default(now())
// }

// model ToTrabel {
//   id Int @default(autoincrement()) @id
//   userId Int
//   planId Int
//   day Int
//   placeName String
//   content String
//   imageUrl String
//   memo String?
//   address String
// }
